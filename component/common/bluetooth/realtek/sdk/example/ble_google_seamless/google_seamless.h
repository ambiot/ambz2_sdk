/**
*****************************************************************************************
*     Copyright(c) 2017, Realtek Semiconductor Corporation. All rights reserved.
*****************************************************************************************
  * @file     google_seamless.h
  * @brief    Head file for using google seamless setup service.
  * @details  google seamless setup data structs and external functions declaration.
  * @author
  * @date
  * @version  v1.0
  * *************************************************************************************
  */

/* Define to prevent recursive inclusion */
#ifndef _GOOGLE_SEAMLESS_BLE_SERVICE_H_
#define _GOOGLE_SEAMLESS_BLE_SERVICE_H_

#ifdef  __cplusplus
extern "C" {
#endif      /* __cplusplus */

/* Add Includes here */
#include "profile_server.h"


/** @defgroup Google Seamless Setup Service
  * @brief Google Seanless setup service
  * @{
  */
/*============================================================================*
 *                         Macros
 *============================================================================*/
/** @defgroup GOOGLE_SEAMLESS_SETUP_Service_Application_Parameters GOOGLE SEAMLESS SETUP Service Application Parameters
  * @brief  Type of parameters set/got from application.
  * @{
  */
typedef enum
{
	GOOGLE_SEAMLESS_BLE_SERVICE_PARAM_V5_WRITE_CHAR_VAL = 0x01,
	GOOGLE_SEAMLESS_BLE_SERVICE_PARAM_V6_WRITE_CHAR_VAL = 0x02,
} T_GOOGLE_SEAMLESS_PARAM_TYPE;

/** @} */

/** @defgroup GOOGLE_SEAMLESS_SETUP_Service_Write_Info GOOGLE SEAMLESS SETUP Service Write Info
  * @brief  Parameter for writing characteristic value.
  * @{
  */
#define GOOGLE_SEAMLESS_WRITE_V5                                       1
#define GOOGLE_SEAMLESS_WRITE_V6                                       2

/** @} */

/** @defgroup GOOGLE_SEAMLESS_SETUP_Service_Notify_Indicate_Info GOOGLE SEAMLESS SETUP Service Notify Indicate Info
  * @brief  Parameter for enable or disable notification or indication.
  * @{
  */
#define GOOGLE_SEAMLESS_NOTIFY_INDICATE_V6_ENABLE     1
#define GOOGLE_SEAMLESS_NOTIFY_INDICATE_V6_DISABLE    2

/** @} */

#define GOOGLE_SEAMLESS_READ_MAX_LEN               300

/*============================================================================*
 *                         Types
 *============================================================================*/
/** @defgroup GOOGLE_SEAMLESS_SETUP_Exported_Types GOOGLE SEAMLESS SETUP Exported Types
  * @brief
  * @{
  */
/**
/**
*  @brief google seamless setup service parameter type
*/

/**
*  @brief set google seamless setup service parameter upstream message data
*/
typedef struct
{
    uint8_t opcode; //!< ref:  @ref GOOGLE_SEAMLESS_SETUP_Service_Write_Info
    T_WRITE_TYPE write_type;
    uint16_t len;
    uint8_t *p_value;
} GOOGLE_SEAMLESS_WRITE_MSG;
typedef union
{
    uint8_t notification_indification_index; //!< ref: @ref GOOGLE_SEAMLESS_SETUP_Service_Notify_Indicate_Info
    uint8_t read_value_index; //!< ref: @ref GOOGLE_SEAMLESS_SETUP_Service_Read_Info
    GOOGLE_SEAMLESS_WRITE_MSG write;
} GOOGLE_SEAMLESS_UPSTREAM_MSG_DATA;

/**
*  @brief set google seamless setup service parameter upstream callback data
*/
typedef struct
{
    uint8_t                 conn_id;
    T_SERVICE_CALLBACK_TYPE msg_type;
    GOOGLE_SEAMLESS_UPSTREAM_MSG_DATA msg_data;
} T_GOOGLE_SEAMLESS_CALLBACK_DATA;
/*
/** End of GOOGLE_SEAMLESS_SETUP_Exported_Types
* @}
*/


/*============================================================================*
 *                         Functions
 *============================================================================*/
/** @defgroup GOOGLE_SEAMLESS_SETUP_Exported_Functions GOOGLE SEAMLESS SETUP Exported Functions
  * @brief
  * @{
  */

/**
  * @brief       Add google seamless setup service to the BLE stack database.
  *
  *
  * @param[in]   p_func  Callback when service attribute was read, write or cccd update.
  * @return Service id generated by the BLE stack: @ref T_SERVER_ID.
  * @retval 0xFF Operation failure.
  * @retval Others Service id assigned by stack.
  *
  * <b>Example usage</b>
  * \code{.c}
     void profile_init()
     {
         server_init(1);
         google_seamless_srv_id = google_seamless_add_service(app_handle_profile_message);
     }
  * \endcode
  */
T_SERVER_ID google_seamless_add_service(void *p_func);


/**
/**
 * @brief       Set a google seamless setup service parameter.
 *
 *              NOTE: You can call this function with a google seamless setup service parameter type and it will set the
 *                      google seamless setup service parameter.  Google seamless setup service parameters are defined in @ref T_GOOGLE_SEAMLESS_PARAM_TYPE.
 *                      If the "len" field sets to the size of a "uint16_t" ,the
 *                      "p_value" field must point to a data with type of "uint16_t".
 *
 * @param[in]   param_type   Google seamless setup service parameter type: @ref T_GOOGLE_SEAMLESS_PARAM_TYPE
 * @param[in]   length       Length of data to write
 * @param[in]   p_value Pointer to data to write.  This is dependent on
 *                      the parameter type and WILL be cast to the appropriate
 *                      data type (For example: if data type of param is uint16_t, p_value will be cast to
 *                      pointer of uint16_t).
 *
 * @return Operation result.
 * @retval true Operation success.
 * @retval false Operation failure.
 *
 * <b>Example usage</b>
 * \code{.c}
    void test(void)
    {
        uint8_t *p_value;
        google_seamless_set_parameter(GOOGLE_SEAMLESS_BLE_SERVICE_PARAM_V5_READ_CHAR_VAL, 1, &p_value);
    }
 * \endcode
 */
bool google_seamless_set_parameter(T_GOOGLE_SEAMLESS_PARAM_TYPE param_type, uint8_t length, uint8_t *p_value);



/** @} End of GOOGLE_SEAMLESS_SETUP_Exported_Functions */

/** @} End of GOOGLE SEAMLESS SETUP */


#ifdef  __cplusplus
}
#endif      /*  __cplusplus */

#endif  /* _GOOGLE_SEAMLESS_BLE_SERVICE_H_ */
